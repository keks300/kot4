// Треугольник в окружности (обязательно использование класса Точка и класса Треугольник.
// Класс Окружность и другие классы - по желанию)
// Треугольник расположен на координатной плоскости и описан координатами своих вершин.
// Написать программу вычисляющую координаты центра описанной вокруг треугольника окружности и ее радиус.


import kotlin.math.pow  // Импорт функции pow из стандартной библиотеки Kotlin для возведения в степень
import kotlin.math.sqrt // Импорт функции sqrt из стандартной библиотеки Kotlin для вычисления квадратного корня

// Класс Point с двумя свойствами x и y, представляющими координаты точки на плоскости
class Point(val x: Double, val y: Double)

// Класс Triangle с тремя свойствами a, b и c, представляющими вершины треугольника
class Triangle(val a: Point, val b: Point, val c: Point) {

    // Функция, вычисляющая центр описанной окружности треугольника
    fun circumcenter(): Point {
        // Вычисление значения d(дискриминанта) для использования в формуле вычисления центра описанной окружности
        val d = 2 * (a.x * (b.y - c.y) + b.x * (c.y - a.y) + c.x * (a.y - b.y))
        // Вычисление координаты x центра описанной окружности
        val ux = ((a.x.pow(2) + a.y.pow(2)) * (b.y - c.y) +
                (b.x.pow(2) + b.y.pow(2)) * (c.y - a.y) +
                (c.x.pow(2) + c.y.pow(2)) * (a.y - b.y)) / d
        // Вычисление координаты y центра описанной окружности
        val uy = ((a.x.pow(2) + a.y.pow(2)) * (c.x - b.x) +
                (b.x.pow(2) + b.y.pow(2)) * (a.x - c.x) +
                (c.x.pow(2) + c.y.pow(2)) * (b.x - a.x)) / d
        // Возвращение объекта Point, представляющего координаты центра описанной окружности
        return Point(ux, uy)
    }
    // Функция, вычисляющая радиус описанной окружности треугольника, принимая центр окружности в качестве параметра
    fun circumradius(center: Point): Double {
        // Вычисление расстояния между вершиной a треугольника и центром описанной окружности, представляющего собой радиус окружности
        return sqrt((a.x - center.x).pow(2) + (a.y - center.y).pow(2))
    }
}

fun main() {
    // Создание трех объектов Point, представляющих вершины треугольника
    val pointA = Point(0.0, 0.0)
    val pointB = Point(4.0, 0.0)
    val pointC = Point(2.0, 3.0)

// Создание объекта Triangle с заданными вершинами
    val triangle = Triangle(pointA, pointB, pointC)

// Вычисление центра и радиуса описанной окружности
    val circumcenter = triangle.circumcenter()
    val circumradius = triangle.circumradius(circumcenter)

    // Вывод результатов вычислений на экран
    println("Центр описанной окружности: (${circumcenter.x}, ${circumcenter.y})")
    println("Радиус описанной окружности: $circumradius")
}
